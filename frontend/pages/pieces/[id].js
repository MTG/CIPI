import { useRouter } from 'next/router'
import Link from 'next/link';
import Head from 'next/head';
/*import { PieceGraph } from '../components/GraphExplorer'*/
import React from 'react';
import { DifficultyBar } from '@/components/DifficultyBar';
import { FaThumbsUp, FaThumbsDown } from 'react-icons/fa';
import { useState, useEffect } from 'react';
import { API_HOST } from '@/config'

const getPiece = async (id) => {
    const response = await fetch(`${API_HOST}/api/pieces/${id}`);
    const data = await response.json();
    console.log(data.data)
    return data.data;
}

export default function PiecePage ({}){
    const router = useRouter();
    const { id } = router.query;
    const [liked, setLiked] = useState(false);
    const [disliked, setDisliked] = useState(false);
    const [showCommentBox, setShowCommentBox] = useState(false);
    const [comment, setComment] = useState('');
    const [piece, setPiece] = useState([]);


    useEffect(() => {
        getPiece(id).then((r) => setPiece(r));
    }, [id]);

    const handleUrl = () => {
        window.location.href = piece.url; 
    };

    const handleLike = () => {
        setLiked(!liked);
        setDisliked(false);
        setShowCommentBox(false);
        setComment('');
    };
    const handleDislike = () => {
        setDisliked(!disliked);
        setLiked(false);
        if (disliked) {
            setShowCommentBox(false);
            setComment('');
          }
    };
    const handleCommentChange = (e) => {
        setComment(e.target.value);
    };
    const handleCommentSubmit = (e) => {
        e.preventDefault();
        // Process the comment here
        console.log('Submitted comment:', comment);
    };

    return (
        <>
        <Head>
            <title>Can I Play It?</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.png" />
        </Head>
        
        <div className={'min-h-screen flex flex-col w-screen h-screen overflow-hidden p-2'}>

        <div className={'ml-2 font-bold text-gray-600 text-center'} > CIPI </div>
        
        <div className={'my-10 items-center px-60'}>
            <div className={'ml-2 text-sm font-medium text-gray-600'}> {piece.author} </div>
            <div className={'ml-2 text-2xl font-bold'}>{piece.title}</div>

            <div className={'pt-5 ml-2 text-sm font-bold'}> Difficulty </div>
            <div className="ml-2 h-5 w-full bg-neutral-200 dark:bg-neutral-600">
            <DifficultyBar filled={10/100} />
                
            </div>
            <div className="flex justify-center mt-2">
                <button
                    className={`mr-2 ${
                    liked ? 'text-green-500' : 'text-gray-500'
                    }`}
                    onClick={handleLike}>
                    <FaThumbsUp size={20} />
                </button>
                <button
                    className={`ml-2 ${
                    disliked ? 'text-red-500' : 'text-gray-500'
                    }`}
                    onClick={handleDislike}>
                    <FaThumbsDown size={20} />
                </button>
                {disliked && (
                    <div className="ml-2 border rounded-md p-2">
                    <input
                        type="text"
                        value={comment}
                        onChange={handleCommentChange}
                        placeholder="Add a comment..."
                        disabled={!disliked}
                        className="border border-gray-300 rounded-md px-2 py-1 mr-1"
                    />
                    <button className="bg-red-700 hover:bg-red-800 text-white rounded-md px-2 py-1" onClick={handleCommentSubmit}>+</button>
                    </div>
                )}
            </div>

            <div className={'pt-5 ml-2 text-sm font-bold'}> Time Period </div>
            <div className={'pb-5 ml-2 text-sm font-medium text-gray-600'}> {piece.period} </div>

            <button className="bg-black text-white rounded hover:bg-gray-800 text-white py-2 px-4 text-sm" onClick={handleUrl}>
                Download PDF
            </button>

            <hr className="border-t border-gray-500 my-4" />
        
            <div className="flex justify-center">
                <p className={'pt-5 ml-2 text-sm font-bold'}>Explore pieces of similar difficulty to: </p>
          
                <p className={`rounded-full ml-5 mt-6 w-3 h-3 bg-red-600`}/>
                <p className={'pt-5 ml-2 text-sm font-medioum text-gray-500 hover:underline'}>{piece.title} </p>
             </div>
        </div>
    </div>
    </>
    );
}

